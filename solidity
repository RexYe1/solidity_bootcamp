区块链基本原理
1.互联网应用模型
  .client-server
  .高效，数据中心化存
 .无条件信任运营者
2.web3
 .p2p构架
  .每个节点同步数据，大量沉余备份
  .任何一个节点都可以提供全部服务
  .只需要对协议（代码）的信任

区块链的基本结构
1.链式数据结构
 .分叉
2.状态一致性复制
 .区块链的数据库就是状态机（state），所谓共识就是如何保证所有的节点的状态持续一致
3.数据访问权限
 .无需许可（但是一般有交易成本）
  .读取完全公开透明
  .通过加密算法对写入鉴权（只有对应的私钥才能改变一个账户的状态）

区块链共识算法
1.通过某种协议达到全网节点的数据一致
 .只影响交易的收录和排序
 .交易本身安全性由加密算法保证
 .即使共识失败，没有私钥也不能盗币
 .双花是交易的排序问题
2.pow和pos不是共识算法
 .防止垃圾节点占据全网多数
 .pow的过程需要时间，所以造成延误
3.共识算法种类
 .概率共识
 .最长链（中本聪共识）
 .最多传播（雪崩共识）
4.确定性共识
 .pBFT
 .HotStuff

区块链共识算法
1.扩容的两个维度
 .吞吐量（交易费太高）
 .大区快，降低去中心化程度（eth2.0 pos不能更好的解决的问题）
2.时延（交易确认太慢）
 .替换pow（ETH2.0 POS能更好的解决的问题）

没有人讲的问题
1.EVM的处理瓶颈
 .EVN是单线处理模型，当前最强cpu单线程处理能力在1000到2000tps之间
2.状态存储爆炸和1/0瓶颈
 .高tps产生大量状态数据
 .bsc大约200tps，硬盘和1/0性能要求都已经到极限
 .aws节点每月成本

区块链应用
1.发币（erc20）
2.defi
 .dex，借贷，流动性挖矿
3.nft（erc721，erc1155）
 .头像，游戏，市场，借贷
4.Bonding Curve-DeFi的基石
 .dex（uniswap）
  .x*y=k
 .借贷（compound，aave）
 .R=R base+utilization*slope
 （流动性越多交易体验越好）

web3应用开发架构
1.前端
 .钱包插件
 .浏览器plugin 
 .wallet Connect
2.后端
 .智能合约（数据库+简单计算）
 .数据流（the graph）
3.存储
 .中心化：aws s3
.去中心化：ipfs

区块链开发列子-部署一个erc20代币
1.准备开发环境
2.选择区块链
 .chainlist.org（rpc配置）
  .浏览器，gas代币（水龙头）
 .https:docs.meter.io/developer-documentation/introduction
3.代币合约GitHub
 .https：//GitHub.com/meterio/tokenErc20
4.合约常用开发环境
 .nodejs，npm，hardhat

rollup（optimistic）
1.交易在二层网络打包出块
 .二层网络中心化处理
 .可以过滤交易，决定打包顺序
2.压缩版交易数据打包在以太坊主网
 .用户可以在一层网络提交异议，要求交易在一层网络处理
 .不是所有号称rollup都可以要求交易一层网络重放
 .merkel checkpoint是不够的


